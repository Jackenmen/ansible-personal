---
- name: Add services for turning displays and speakers on and off.
  become: true
  block:
    - name: Add turn_displays_and_speakers_on service file.
      ansible.builtin.copy:
        dest: /etc/systemd/system/turn_displays_and_speakers_on.service
        content: |
          [Unit]
          Description=Turn on the speakers and monitors on startup.
          After=multi-user.target
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=oneshot
          ExecStart=/usr/bin/curl -X POST http://192.168.0.3:8123/api/webhook/computer_turn_on
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target

    - name: Add turn_displays_and_speakers_off service file.
      block:
        - name: Create /opt/scripts directory.
          ansible.builtin.file:
            path: /opt/scripts
            state: directory

        - name: Create computer_turn_off.sh script.
          ansible.builtin.copy:
            dest: /opt/scripts/computer_turn_off.sh
            content: |
              #!/usr/bin/env bash

              if ! systemctl list-jobs | grep -q -e "reboot.target.*start"; then
                  echo 'Not rebooting'
                  curl -X POST http://192.168.0.3:8123/api/webhook/computer_turn_off
              fi

        - name: Create service file.
          ansible.builtin.copy:
            dest: /etc/systemd/system/turn_displays_and_speakers_off.service
            content: |
              [Unit]
              Description=Turn off the speakers and monitors on shutdown.
              After=network-online.target

              [Service]
              Type=oneshot
              ExecStart=/bin/true
              ExecStop=/bin/bash /opt/scripts/computer_turn_off.sh
              RemainAfterExit=yes

              [Install]
              WantedBy=multi-user.target

    - name: Enable the new services.
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
      loop:
        - turn_displays_and_speakers_on
        - turn_displays_and_speakers_off

- name: Enable Redshift service.
  tags:
    - no-ci  # Redshift is pre-installed on Mint but not in CI
  ansible.builtin.systemd:
    name: redshift-gtk
    scope: user
    enabled: true
    state: started
