---
# Python
- name: Install full Python 3.8, 3.9, and 3.10.
  become: true
  block:
    - name: Add the deadsnakes repository.
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa
        codename: "{{ ubuntu_codename }}"
        state: present

    - name: Install Python 3.7.
      ansible.builtin.apt:
        name:
          - python3.7
          - python3.7-dev
          - python3.7-venv
        state: present

    - name: Install Python 3.8.
      ansible.builtin.apt:
        name:
          - python3.8
          - python3.8-dev
          - python3.8-venv
        state: present

    - name: Install Python 3.9.
      ansible.builtin.apt:
        name:
          - python3.9
          - python3.9-dev
          - python3.9-venv
        state: present

    - name: Install Python 3.10.
      ansible.builtin.apt:
        name:
          - python3.10
          - python3.10-dev
          - python3.10-venv
        state: present

    - name: Install Python 3.11.
      ansible.builtin.apt:
        name:
          - python3.11
          - python3.11-dev
          - python3.11-venv
        state: present

- name: Ensure python is python3.
  become: true
  ansible.builtin.apt:
    name: python-is-python3
    state: present

- name: Install pipx.
  become: true
  block:
    - name: Install pipx.
      ansible.builtin.apt:
        name: pipx
        state: present

    - name: Create PIPX_HOME directory.
      ansible.builtin.file:
        path: "{{ ansible_env.PIPX_HOME }}"
        state: directory
        mode: '0755'

    - name: Create PIPX_HOME/logs directory.
      ansible.builtin.file:
        path: "{{ ansible_env.PIPX_HOME }}/logs"
        state: directory
        # This is not ideal but currently the only way to
        # keep `pipx list` work without `sudo`.
        #
        # https://github.com/pypa/pipx/issues/754#issuecomment-1181082995
        mode: '0777'

    - name: Set PIPX_BIN_DIR global env var.
      ansible.builtin.lineinfile:
        path: /etc/environment
        regexp: '^PIPX_BIN_DIR='
        line: "PIPX_BIN_DIR={{ ansible_env.PIPX_BIN_DIR }}"
        state: present

    - name: Set PIPX_HOME global env var.
      ansible.builtin.lineinfile:
        path: /etc/environment
        regexp: '^PIPX_HOME='
        line: "PIPX_HOME={{ ansible_env.PIPX_HOME }}"
        state: present

# Java
- name: Install Java OpenJDK 11.
  become: true
  ansible.builtin.apt:
    name: openjdk-11-jre
    state: present

# Node
- name: Install Node.js LTS (16.x).
  become: true
  block:
    - name: Add the NodeSource repository.
      ansible.builtin.apt_repository:
        repo: >-
          deb [signed-by=/usr/share/keyrings/nodesource-archive-keyring.gpg]
          https://deb.nodesource.com/node_16.x {{ ubuntu_codename }} main
        state: present

    - name: Install Node.js LTS (16.x).
      ansible.builtin.apt:
        name: nodejs
        state: present

- name: Enable npm's corepack.
  become: true
  ansible.builtin.command:
    cmd: corepack enable --install-directory /usr/local/bin
    creates: /usr/local/bin/yarn

# Rust
- name: Install Rust.
  block:
    - name: Install rustup.
      become: true
      community.general.snap:
        name: rustup
        classic: true
        state: present

    - name: Set fact about RUSTUP_HOME.
      ansible.builtin.set_fact:
        rustup_home: "{{ lookup('pipe', 'rustup show home') }}"

    - name: Install latest stable Rust toolchain.
      ansible.builtin.command:
        cmd: rustup toolchain install stable-x86_64-unknown-linux-gnu
        creates: "{{ rustup_home }}/toolchains/stable-x86_64-unknown-linux-gnu"

- name: Install cargo-update.
  block:
    - name: Install cargo-update's dependencies.
      become: true
      ansible.builtin.apt:
        name:
          - libssl-dev
          - pkg-config
        state: present

    - name: Install cargo-update.
      community.general.cargo:
        name: cargo-update
        state: present

# .NET
- name: Install .NET.
  become: true
  block:
    - name: Add the Microsoft packages repository.
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-archive-keyring.gpg]
          https://packages.microsoft.com/ubuntu/{{ ansible_distribution_version }}/prod {{ ubuntu_codename }} main
        state: present

    - name: Install .NET 6.0.
      ansible.builtin.apt:
        name:
          - dotnet-sdk-6.0
          - aspnetcore-runtime-6.0

    - name: Install .NET 7.0.
      ansible.builtin.apt:
        name:
          - dotnet-sdk-7.0
          - aspnetcore-runtime-7.0
